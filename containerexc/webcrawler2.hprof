JAVA PROFILE 1.0.1, created Sun Oct 29 09:47:21 2017

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=500001a5, id = 200001, name="main", group="main")
THREAD START (obj=500002a8, id = 200004, name="ForkJoinPool.commonPool-worker-1", group="main")
THREAD START (obj=500002a8, id = 200005, name="ForkJoinPool.commonPool-worker-2", group="main")
THREAD START (obj=500002a8, id = 200006, name="ForkJoinPool.commonPool-worker-3", group="main")
THREAD END (id = 200001)
THREAD START (obj=500001a5, id = 200007, name="DestroyJavaVM", group="main")
THREAD END (id = 200007)
TRACE 300221:
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
TRACE 300220:
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
TRACE 300226:
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.externalAwaitDone(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
TRACE 300228:
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.externalAwaitDone(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
TRACE 300225:
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
TRACE 300223:
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
TRACE 300229:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
TRACE 300233:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
TRACE 300239:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.externalAwaitDone(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
TRACE 300236:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.externalAwaitDone(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
TRACE 300231:
	java.util.Arrays$ArrayList.spliterator(<Unknown Source>:Unknown line)
	java.util.Collection.parallelStream(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
TRACE 300232:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
TRACE 300234:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
TRACE 300227:
	java.lang.AbstractStringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	WebCrawler.getUrls(WebCrawler.java:15)
	WebCrawler.crawl(WebCrawler.java:26)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
TRACE 300235:
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.externalAwaitDone(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
TRACE 300237:
	java.util.Spliterators$ArraySpliterator.<init>(<Unknown Source>:Unknown line)
	java.util.Spliterators$ArraySpliterator.<init>(<Unknown Source>:Unknown line)
	java.util.Spliterators.spliterator(<Unknown Source>:Unknown line)
	java.util.Arrays$ArrayList.spliterator(<Unknown Source>:Unknown line)
	java.util.Collection.parallelStream(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
TRACE 300224:
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
TRACE 300238:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.externalAwaitDone(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
TRACE 300222:
	sun.misc.Unsafe.compareAndSwapInt(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.setCompletion(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.quietlyComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.propagateCompletion(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.awaitJoin(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
TRACE 300240:
	java.util.Spliterators$ArraySpliterator.<init>(<Unknown Source>:Unknown line)
	java.util.Spliterators$ArraySpliterator.<init>(<Unknown Source>:Unknown line)
	java.util.Spliterators.spliterator(<Unknown Source>:Unknown line)
	java.util.Arrays$ArrayList.spliterator(<Unknown Source>:Unknown line)
	java.util.Collection.parallelStream(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.externalAwaitDone(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
TRACE 300243:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.externalAwaitDone(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
TRACE 300185:
	java.lang.ClassLoader.findLoadedClass0(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.findLoadedClass(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	sun.invoke.util.BytecodeDescriptor.parseSig(<Unknown Source>:Unknown line)
	sun.invoke.util.BytecodeDescriptor.parseMethod(<Unknown Source>:Unknown line)
	sun.invoke.util.BytecodeDescriptor.parseMethod(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodType.fromMethodDescriptorString(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$Factory.makeCbmhCtor(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$Factory.makeCtors(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$SpeciesData.<init>(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$SpeciesData$1.apply(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$SpeciesData$1.apply(<Unknown Source>:Unknown line)
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$SpeciesData.get(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaFormEditor.newSpeciesData(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaFormEditor.makeArgumentCombinationForm(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaFormEditor.filterArgumentForm(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.makePairwiseConvert(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.makePairwiseConvert(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandle.asTypeUncached(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandle.asType(<Unknown Source>:Unknown line)
	java.lang.invoke.Invokers.checkGenericType(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm$MH.951007336.invoke_MT(LambdaForm$MH:Unknown line)
	java.lang.invoke.CallSite.makeSite(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleNatives.linkCallSite(<Unknown Source>:Unknown line)
TRACE 300154:
	sun.misc.Unsafe.compareAndSwapLong(<Unknown Source>:Unknown line)
	java.util.concurrent.ConcurrentHashMap.addCount(<Unknown Source>:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putVal(<Unknown Source>:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodType$ConcurrentWeakInternSet.add(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodType.makeImpl(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodType.changeReturnType(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.findCollector(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.makeArrays(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.access$000(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl$Lazy.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.varargsArray(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.varargsArray(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandle.asCollector(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl$AsVarargsCollector.<init>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl$AsVarargsCollector.<init>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.makeVarargsCollector(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandle.setVarargs(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethod(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.findStatic(<Unknown Source>:Unknown line)
	java.lang.invoke.CallSite.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleNatives.linkCallSite(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.main(WebCrawler.java:21)
TRACE 300153:
	sun.misc.Unsafe.defineAnonymousClass(<Unknown Source>:Unknown line)
	java.lang.invoke.InvokerBytecodeGenerator.loadAndInitializeInvokerClass(<Unknown Source>:Unknown line)
	java.lang.invoke.InvokerBytecodeGenerator.loadMethod(<Unknown Source>:Unknown line)
	java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm.compileToBytecode(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm.prepare(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandle.<init>(<Unknown Source>:Unknown line)
	java.lang.invoke.DelegatingMethodHandle.<init>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.<init>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.makeIntrinsic(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.makeArrays(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.access$000(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl$Lazy.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.varargsArray(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.varargsArray(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandle.asCollector(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl$AsVarargsCollector.<init>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl$AsVarargsCollector.<init>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleImpl.makeVarargsCollector(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandle.setVarargs(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethod(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.findStatic(<Unknown Source>:Unknown line)
	java.lang.invoke.CallSite.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleNatives.linkCallSite(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.main(WebCrawler.java:21)
TRACE 300138:
	java.lang.Object.getClass(<Unknown Source>:Unknown line)
	java.util.Arrays.copyOf(<Unknown Source>:Unknown line)
	java.util.ArrayList.grow(<Unknown Source>:Unknown line)
	java.util.ArrayList.ensureExplicitCapacity(<Unknown Source>:Unknown line)
	java.util.ArrayList.ensureCapacityInternal(<Unknown Source>:Unknown line)
	java.util.ArrayList.add(<Unknown Source>:Unknown line)
	sun.invoke.util.BytecodeDescriptor.parseMethod(<Unknown Source>:Unknown line)
	sun.invoke.util.BytecodeDescriptor.parseMethod(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodType.fromMethodDescriptorString(<Unknown Source>:Unknown line)
	java.lang.invoke.MemberName.getMethodType(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm.computeInitialPreparedForms(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.preparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.preparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.make(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.main(WebCrawler.java:21)
TRACE 300242:
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:27)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doInvoke(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.invoke(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.evaluate(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline.forEach(<Unknown Source>:Unknown line)
	java.util.stream.ReferencePipeline$Head.forEach(<Unknown Source>:Unknown line)
	WebCrawler.crawl(WebCrawler.java:28)
	WebCrawler.lambda$crawl$0(WebCrawler.java:28)
	WebCrawler$$Lambda$1.471910020.accept(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachOp$OfRef.accept(<Unknown Source>:Unknown line)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(<Unknown Source>:Unknown line)
	java.util.stream.AbstractPipeline.copyInto(<Unknown Source>:Unknown line)
	java.util.stream.ForEachOps$ForEachTask.compute(<Unknown Source>:Unknown line)
	java.util.concurrent.CountedCompleter.exec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinTask.doExec(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.helpComplete(<Unknown Source>:Unknown line)
	java.util.concurrent.ForkJoinPool.externalHelpComplete(<Unknown Source>:Unknown line)
TRACE 300117:
	jdk.internal.org.objectweb.asm.MethodWriter.<init>(<Unknown Source>:Unknown line)
	jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(<Unknown Source>:Unknown line)
	java.lang.invoke.InvokerBytecodeGenerator.classFilePrologue(<Unknown Source>:Unknown line)
	java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes(<Unknown Source>:Unknown line)
	java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm.compileToBytecode(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.preparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.preparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.make(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.make(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.make(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm$NamedFunction.resolve(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle$Lazy.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.preparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.preparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.make(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.getDirectMethod(<Unknown Source>:Unknown line)
	java.lang.invoke.MethodHandles$Lookup.findStatic(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$Factory.makeCbmhCtor(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$Factory.makeCtors(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$SpeciesData.initForBootstrap(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle$SpeciesData.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.BoundMethodHandle.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm.createIdentityForms(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm.<clinit>(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(<Unknown Source>:Unknown line)
	java.lang.invoke.DirectMethodHandle.preparedLambdaForm(<Unknown Source>:Unknown line)
TRACE 300062:
	java.io.WinNTFileSystem.canonicalize0(<Unknown Source>:Unknown line)
	java.io.WinNTFileSystem.canonicalize(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalPath(<Unknown Source>:Unknown line)
	java.io.FilePermission$1.run(<Unknown Source>:Unknown line)
	java.io.FilePermission$1.run(<Unknown Source>:Unknown line)
	java.security.AccessController.doPrivileged(<Unknown Source>:Unknown line)
	java.io.FilePermission.init(<Unknown Source>:Unknown line)
	java.io.FilePermission.<init>(<Unknown Source>:Unknown line)
	java.net.URLClassLoader.getPermissions(<Unknown Source>:Unknown line)
	sun.misc.Launcher$AppClassLoader.getPermissions(<Unknown Source>:Unknown line)
	java.security.SecureClassLoader.getProtectionDomain(<Unknown Source>:Unknown line)
	java.security.SecureClassLoader.defineClass(<Unknown Source>:Unknown line)
	java.net.URLClassLoader.defineClass(<Unknown Source>:Unknown line)
	java.net.URLClassLoader.access$100(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$1.run(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$1.run(<Unknown Source>:Unknown line)
	java.security.AccessController.doPrivileged(<Unknown Source>:Unknown line)
	java.net.URLClassLoader.findClass(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.checkAndLoadMain(<Unknown Source>:Unknown line)
TRACE 300032:
	java.lang.StringCoding.encode(<Unknown Source>:Unknown line)
	java.lang.String.getBytes(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient.registerUsage(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient.setupAndTimestamp(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient.access$000(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient$4.run(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient$4.run(<Unknown Source>:Unknown line)
	java.security.AccessController.doPrivileged(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient.run(<Unknown Source>:Unknown line)
	sun.misc.PostVMInitHook.trackJavaUsage(<Unknown Source>:Unknown line)
	sun.misc.PostVMInitHook.run(<Unknown Source>:Unknown line)
CPU SAMPLES BEGIN (total = 424) Sun Oct 29 09:47:25 2017
rank   self  accum   count trace method
   1 29.95% 29.95%     127 300221 java.io.FileOutputStream.writeBytes
   2 28.54% 58.49%     121 300220 java.io.FileOutputStream.writeBytes
   3 12.74% 71.23%      54 300226 java.io.FileOutputStream.writeBytes
   4 10.85% 82.08%      46 300228 java.io.FileOutputStream.writeBytes
   5  5.19% 87.26%      22 300225 java.io.FileOutputStream.writeBytes
   6  3.54% 90.80%      15 300223 java.io.FileOutputStream.writeBytes
   7  1.89% 92.69%       8 300229 java.io.PrintStream.write
   8  1.42% 94.10%       6 300233 java.io.PrintStream.write
   9  0.71% 94.81%       3 300239 java.io.PrintStream.write
  10  0.47% 95.28%       2 300236 java.io.PrintStream.write
  11  0.47% 95.75%       2 300231 java.util.Arrays$ArrayList.spliterator
  12  0.24% 95.99%       1 300232 java.io.PrintStream.write
  13  0.24% 96.23%       1 300234 java.io.PrintStream.write
  14  0.24% 96.46%       1 300227 java.lang.AbstractStringBuilder.append
  15  0.24% 96.70%       1 300235 java.io.PrintStream.println
  16  0.24% 96.93%       1 300237 java.util.Spliterators$ArraySpliterator.<init>
  17  0.24% 97.17%       1 300224 java.io.PrintStream.newLine
  18  0.24% 97.41%       1 300238 java.io.PrintStream.write
  19  0.24% 97.64%       1 300222 sun.misc.Unsafe.compareAndSwapInt
  20  0.24% 97.88%       1 300240 java.util.Spliterators$ArraySpliterator.<init>
  21  0.24% 98.11%       1 300243 java.io.PrintStream.write
  22  0.24% 98.35%       1 300185 java.lang.ClassLoader.findLoadedClass0
  23  0.24% 98.58%       1 300154 sun.misc.Unsafe.compareAndSwapLong
  24  0.24% 98.82%       1 300153 sun.misc.Unsafe.defineAnonymousClass
  25  0.24% 99.06%       1 300138 java.lang.Object.getClass
  26  0.24% 99.29%       1 300242 java.io.PrintStream.write
  27  0.24% 99.53%       1 300117 jdk.internal.org.objectweb.asm.MethodWriter.<init>
  28  0.24% 99.76%       1 300062 java.io.WinNTFileSystem.canonicalize0
  29  0.24% 100.00%       1 300032 java.lang.StringCoding.encode
CPU SAMPLES END
